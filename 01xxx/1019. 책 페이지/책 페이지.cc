#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

ll cnt[10];
ll gap = 1e7;
ll pre[100][10] = {
    {5888896, 7000001, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000},
    {7000000, 16999999, 7000001, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000},
    {7000000, 7000000, 16999999, 7000001, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000},
    {7000000, 7000000, 7000000, 16999999, 7000001, 7000000, 7000000, 7000000, 7000000, 7000000},
    {7000000, 7000000, 7000000, 7000000, 16999999, 7000001, 7000000, 7000000, 7000000, 7000000},
    {7000000, 7000000, 7000000, 7000000, 7000000, 16999999, 7000001, 7000000, 7000000, 7000000},
    {7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 16999999, 7000001, 7000000, 7000000},
    {7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 16999999, 7000001, 7000000},
    {7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 16999999, 7000001},
    {7000001, 7000001, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 16999999},
    {16999999, 17000001, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000},
    {7000000, 26999999, 7000001, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000},
    {7000000, 17000000, 16999999, 7000001, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000},
    {7000000, 17000000, 7000000, 16999999, 7000001, 7000000, 7000000, 7000000, 7000000, 7000000},
    {7000000, 17000000, 7000000, 7000000, 16999999, 7000001, 7000000, 7000000, 7000000, 7000000},
    {7000000, 17000000, 7000000, 7000000, 7000000, 16999999, 7000001, 7000000, 7000000, 7000000},
    {7000000, 17000000, 7000000, 7000000, 7000000, 7000000, 16999999, 7000001, 7000000, 7000000},
    {7000000, 17000000, 7000000, 7000000, 7000000, 7000000, 7000000, 16999999, 7000001, 7000000},
    {7000000, 17000000, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 16999999, 7000001},
    {7000001, 16999999, 7000001, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 16999999},
    {16999999, 7000001, 17000000, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000},
    {7000000, 16999999, 17000001, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000},
    {7000000, 7000000, 26999999, 7000001, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000},
    {7000000, 7000000, 17000000, 16999999, 7000001, 7000000, 7000000, 7000000, 7000000, 7000000},
    {7000000, 7000000, 17000000, 7000000, 16999999, 7000001, 7000000, 7000000, 7000000, 7000000},
    {7000000, 7000000, 17000000, 7000000, 7000000, 16999999, 7000001, 7000000, 7000000, 7000000},
    {7000000, 7000000, 17000000, 7000000, 7000000, 7000000, 16999999, 7000001, 7000000, 7000000},
    {7000000, 7000000, 17000000, 7000000, 7000000, 7000000, 7000000, 16999999, 7000001, 7000000},
    {7000000, 7000000, 17000000, 7000000, 7000000, 7000000, 7000000, 7000000, 16999999, 7000001},
    {7000001, 7000000, 16999999, 7000001, 7000000, 7000000, 7000000, 7000000, 7000000, 16999999},
    {16999999, 7000001, 7000000, 17000000, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000},
    {7000000, 16999999, 7000001, 17000000, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000},
    {7000000, 7000000, 16999999, 17000001, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000},
    {7000000, 7000000, 7000000, 26999999, 7000001, 7000000, 7000000, 7000000, 7000000, 7000000},
    {7000000, 7000000, 7000000, 17000000, 16999999, 7000001, 7000000, 7000000, 7000000, 7000000},
    {7000000, 7000000, 7000000, 17000000, 7000000, 16999999, 7000001, 7000000, 7000000, 7000000},
    {7000000, 7000000, 7000000, 17000000, 7000000, 7000000, 16999999, 7000001, 7000000, 7000000},
    {7000000, 7000000, 7000000, 17000000, 7000000, 7000000, 7000000, 16999999, 7000001, 7000000},
    {7000000, 7000000, 7000000, 17000000, 7000000, 7000000, 7000000, 7000000, 16999999, 7000001},
    {7000001, 7000000, 7000000, 16999999, 7000001, 7000000, 7000000, 7000000, 7000000, 16999999},
    {16999999, 7000001, 7000000, 7000000, 17000000, 7000000, 7000000, 7000000, 7000000, 7000000},
    {7000000, 16999999, 7000001, 7000000, 17000000, 7000000, 7000000, 7000000, 7000000, 7000000},
    {7000000, 7000000, 16999999, 7000001, 17000000, 7000000, 7000000, 7000000, 7000000, 7000000},
    {7000000, 7000000, 7000000, 16999999, 17000001, 7000000, 7000000, 7000000, 7000000, 7000000},
    {7000000, 7000000, 7000000, 7000000, 26999999, 7000001, 7000000, 7000000, 7000000, 7000000},
    {7000000, 7000000, 7000000, 7000000, 17000000, 16999999, 7000001, 7000000, 7000000, 7000000},
    {7000000, 7000000, 7000000, 7000000, 17000000, 7000000, 16999999, 7000001, 7000000, 7000000},
    {7000000, 7000000, 7000000, 7000000, 17000000, 7000000, 7000000, 16999999, 7000001, 7000000},
    {7000000, 7000000, 7000000, 7000000, 17000000, 7000000, 7000000, 7000000, 16999999, 7000001},
    {7000001, 7000000, 7000000, 7000000, 16999999, 7000001, 7000000, 7000000, 7000000, 16999999},
    {16999999, 7000001, 7000000, 7000000, 7000000, 17000000, 7000000, 7000000, 7000000, 7000000},
    {7000000, 16999999, 7000001, 7000000, 7000000, 17000000, 7000000, 7000000, 7000000, 7000000},
    {7000000, 7000000, 16999999, 7000001, 7000000, 17000000, 7000000, 7000000, 7000000, 7000000},
    {7000000, 7000000, 7000000, 16999999, 7000001, 17000000, 7000000, 7000000, 7000000, 7000000},
    {7000000, 7000000, 7000000, 7000000, 16999999, 17000001, 7000000, 7000000, 7000000, 7000000},
    {7000000, 7000000, 7000000, 7000000, 7000000, 26999999, 7000001, 7000000, 7000000, 7000000},
    {7000000, 7000000, 7000000, 7000000, 7000000, 17000000, 16999999, 7000001, 7000000, 7000000},
    {7000000, 7000000, 7000000, 7000000, 7000000, 17000000, 7000000, 16999999, 7000001, 7000000},
    {7000000, 7000000, 7000000, 7000000, 7000000, 17000000, 7000000, 7000000, 16999999, 7000001},
    {7000001, 7000000, 7000000, 7000000, 7000000, 16999999, 7000001, 7000000, 7000000, 16999999},
    {16999999, 7000001, 7000000, 7000000, 7000000, 7000000, 17000000, 7000000, 7000000, 7000000},
    {7000000, 16999999, 7000001, 7000000, 7000000, 7000000, 17000000, 7000000, 7000000, 7000000},
    {7000000, 7000000, 16999999, 7000001, 7000000, 7000000, 17000000, 7000000, 7000000, 7000000},
    {7000000, 7000000, 7000000, 16999999, 7000001, 7000000, 17000000, 7000000, 7000000, 7000000},
    {7000000, 7000000, 7000000, 7000000, 16999999, 7000001, 17000000, 7000000, 7000000, 7000000},
    {7000000, 7000000, 7000000, 7000000, 7000000, 16999999, 17000001, 7000000, 7000000, 7000000},
    {7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 26999999, 7000001, 7000000, 7000000},
    {7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 17000000, 16999999, 7000001, 7000000},
    {7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 17000000, 7000000, 16999999, 7000001},
    {7000001, 7000000, 7000000, 7000000, 7000000, 7000000, 16999999, 7000001, 7000000, 16999999},
    {16999999, 7000001, 7000000, 7000000, 7000000, 7000000, 7000000, 17000000, 7000000, 7000000},
    {7000000, 16999999, 7000001, 7000000, 7000000, 7000000, 7000000, 17000000, 7000000, 7000000},
    {7000000, 7000000, 16999999, 7000001, 7000000, 7000000, 7000000, 17000000, 7000000, 7000000},
    {7000000, 7000000, 7000000, 16999999, 7000001, 7000000, 7000000, 17000000, 7000000, 7000000},
    {7000000, 7000000, 7000000, 7000000, 16999999, 7000001, 7000000, 17000000, 7000000, 7000000},
    {7000000, 7000000, 7000000, 7000000, 7000000, 16999999, 7000001, 17000000, 7000000, 7000000},
    {7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 16999999, 17000001, 7000000, 7000000},
    {7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 26999999, 7000001, 7000000},
    {7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 17000000, 16999999, 7000001},
    {7000001, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 16999999, 7000001, 16999999},
    {16999999, 7000001, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 17000000, 7000000},
    {7000000, 16999999, 7000001, 7000000, 7000000, 7000000, 7000000, 7000000, 17000000, 7000000},
    {7000000, 7000000, 16999999, 7000001, 7000000, 7000000, 7000000, 7000000, 17000000, 7000000},
    {7000000, 7000000, 7000000, 16999999, 7000001, 7000000, 7000000, 7000000, 17000000, 7000000},
    {7000000, 7000000, 7000000, 7000000, 16999999, 7000001, 7000000, 7000000, 17000000, 7000000},
    {7000000, 7000000, 7000000, 7000000, 7000000, 16999999, 7000001, 7000000, 17000000, 7000000},
    {7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 16999999, 7000001, 17000000, 7000000},
    {7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 16999999, 17000001, 7000000},
    {7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 26999999, 7000001},
    {7000001, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 16999999, 17000000},
    {16999999, 7000001, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 17000000},
    {7000000, 16999999, 7000001, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 17000000},
    {7000000, 7000000, 16999999, 7000001, 7000000, 7000000, 7000000, 7000000, 7000000, 17000000},
    {7000000, 7000000, 7000000, 16999999, 7000001, 7000000, 7000000, 7000000, 7000000, 17000000},
    {7000000, 7000000, 7000000, 7000000, 16999999, 7000001, 7000000, 7000000, 7000000, 17000000},
    {7000000, 7000000, 7000000, 7000000, 7000000, 16999999, 7000001, 7000000, 7000000, 17000000},
    {7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 16999999, 7000001, 7000000, 17000000},
    {7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 16999999, 7000001, 17000000},
    {7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 16999999, 17000001},
    {7000002, 7000001, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 26999998},
};

int main() {
    ios::sync_with_stdio(0); cin.tie(0);
    int n; cin >> n;

    ll cur=1;
    for(int i=0;cur+gap-1<=n;i++) {
        for(int j=0;j<10;j++) cnt[j] += pre[i][j];
        cur += gap;
    }
    for(;cur<=n;cur++) {
        string s = to_string(cur);
        for(char ch : s) cnt[ch-'0']++;
    }
    for(int i=0;i<10;i++) cout << cnt[i] << ' ';
}